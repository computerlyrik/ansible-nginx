{% if nginx__proxy_websocket %}
map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}
{% endif %}

upstream {{ item.name }} {
    server {{ item.backend_url }};
}

{% if item.ssl is defined %}

server {

  server_name {{ item.url }};

  {% for port in item.ports|default([80])  %}
  listen "{{ port }}";
  {% endfor %}

    return 301 https://$host$request_uri;
}

{% endif %}

server {

  server_name {{ item.url }};

  {% for port in item.ssl_ports|default(["443 ssl"] if item.ssl is defined else ["80 http"]) %}
  listen {{ port }};
  {% endfor %}

  client_max_body_size	{{ nginx__max_body_size }};

  {% if item.ssl is defined %}
  ssl_certificate     /etc/nginx/ssl/{{ item.ssl.cert }};
  ssl_certificate_key /etc/nginx/ssl/{{ item.ssl.key }};
  ssl_ciphers '{{ nginx__ssl_ciphers }}';
  {% endif %}

  {% if item.authfile is defined %}
  auth_basic "Restricted";
  auth_basic_user_file {{ nginx__passwdfile_directory }}/{{ item.authfile }};
  {% endif %}

  location {{ item.location | default('/') }} {
    proxy_pass http://{{ item.name }};
    proxy_set_header Host $host;

    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_max_temp_file_size {{ nginx__proxy_max_filesize }};

  {% if nginx__proxy_websocket %}
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
  {% endif %}

  {% if item.extra_headers is defined %}
    proxy_set_header Forwarded "proto=$scheme;host=$host";
    proxy_set_header X-Forwarded-Prefix $http_x_forwarded_prefix;
    proxy_set_header X-Forwarded-Host $http_x_forwarded_host;
    proxy_set_header X-NginX-Proxy true;
    proxy_set_header X-Forwarded-Protocol https;
    proxy_set_header X-Forwarded-Ssl on;
    proxy_set_header X-Url-Scheme https;
  {% endif %}

  }
}


